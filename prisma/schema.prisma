generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement()) @map("_id")
  username  String   @unique
  email     String   @unique
  guild     String
  idAlbion  String
  password  String
  money     Money?
  role      String?  @default("member")
  eventos   event[] @relation("ParticipaEnEvento")
  eventosCreados   event[] @relation("CreadorDeEvento")
  logs      Log[]  // Relaci√≥n inversa
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Money {
  id     Int   @id @default(autoincrement())
  amount Float @default(0)
  userId Int   @unique
  user   User  @relation(fields: [userId], references: [id])
}

model GuildData {
  id          Int @id @default(autoincrement())
  nameGuild   String @unique
  idGuild     String @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Log {
  id           Int       @id @default(autoincrement())
  action       String
  userId       Int
  user         User      @relation(fields: [userId], references: [id])
  oldValue     String       // o cualquier tipo de dato que represente el valor anterior
  newValue     String       // o cualquier tipo de dato que represente el nuevo valor
  timestamp    DateTime  @default(now())
}

model event{
  id                    Int      @id @default(autoincrement())
  nameEvent            String
  numberOfParticipants Float
  participantes        User[]   @relation("ParticipaEnEvento")
  split                Float    @default(0)
  siteDeposited        String   @default("Debe ingresar un lugar")
  userCreated          User[]   @relation("CreadorDeEvento")
  completed            Boolean  @default(false)
  actived              Boolean  @default(true)
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
}